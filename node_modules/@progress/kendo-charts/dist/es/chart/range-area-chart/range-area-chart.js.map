{"version":3,"file":"range-area-chart.js","sources":["range-area-chart.js"],"sourcesContent":["import CategoricalChart from '../categorical-chart';\nimport LineChartMixin from '../mixins/line-chart-mixin';\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport RangeAreaPoint from './range-area-point';\nimport RangeAreaSegment from './range-area-segment';\nimport SplineRangeAreaSegment from './spline-range-area-segment';\nimport StepRangeAreaSegment from './step-range-area-segment';\n\nimport { Box } from '../../core';\nimport { ZERO } from '../constants';\nimport { MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { isNumber } from '../../common';\nimport { deepExtend, isFunction } from '../../common';\nimport { hasValue } from '../utils';\n\nclass RangeAreaChart extends CategoricalChart {\n\n    render() {\n        super.render();\n\n        this.renderSegments();\n    }\n\n    pointType() {\n        return RangeAreaPoint;\n    }\n\n    createPoint(data, fields) {\n        const { categoryIx, category, series, seriesIx } = fields;\n        let value = data.valueFields;\n\n        if (!hasValue(value.from) && !hasValue(value.to)) {\n            if (this.seriesMissingValues(series) === ZERO) {\n                value = {\n                    from: 0,\n                    to: 0\n                };\n            } else {\n                return null;\n            }\n        }\n\n        let pointOptions = this.pointOptions(series, seriesIx);\n        pointOptions = this.evalPointOptions(\n            pointOptions, value, category, categoryIx, series, seriesIx\n        );\n\n        let color = data.fields.color || series.color;\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        const point = new RangeAreaPoint(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    }\n\n    createSegment(linePoints, currentSeries, seriesIx) {\n        const style = (currentSeries.line || {}).style;\n        let segmentType;\n        if (style === \"smooth\") {\n            segmentType = SplineRangeAreaSegment;\n        } else if (style === \"step\") {\n            segmentType = StepRangeAreaSegment;\n        } else {\n            segmentType = RangeAreaSegment;\n        }\n\n        return new segmentType(linePoints, currentSeries, seriesIx);\n    }\n\n    plotRange(point, startValue) {\n        if (!point) {\n            return [ startValue, startValue ];\n        }\n\n        return [ point.value.from, point.value.to ];\n    }\n\n    valueSlot(valueAxis, plotRange) {\n        const fromSlot = valueAxis.getSlot(plotRange[0], plotRange[0], !this.options.clip);\n        const toSlot = valueAxis.getSlot(plotRange[1], plotRange[1], !this.options.clip);\n        if (fromSlot && toSlot) {\n            return {\n                from: fromSlot,\n                to: toSlot\n            };\n        }\n    }\n\n    pointSlot(categorySlot, valueSlot) {\n        const { from, to } = valueSlot;\n        let fromSlot, toSlot;\n\n        if (this.options.invertAxes) {\n            fromSlot = new Box(from.x1, categorySlot.y1, from.x2, categorySlot.y2);\n            toSlot = new Box(to.x1, categorySlot.y1, to.x2, categorySlot.y2);\n        } else {\n            fromSlot = new Box(categorySlot.x1, from.y1, categorySlot.x2, from.y2);\n            toSlot = new Box(categorySlot.x1, to.y1, categorySlot.x2, to.y2);\n        }\n\n        return {\n            from: fromSlot,\n            to: toSlot\n        };\n    }\n\n    addValue(data, fields) {\n        const valueFields = data.valueFields;\n        if (!isNumber(valueFields.from)) {\n            valueFields.from = valueFields.to;\n        }\n\n        if (!isNumber(valueFields.to)) {\n            valueFields.to = valueFields.from;\n        }\n\n        super.addValue(data, fields);\n    }\n\n    updateRange(value, fields) {\n        if (value !== null && isNumber(value.from) && isNumber(value.to)) {\n            const axisName = fields.series.axis;\n            const axisRange = this.valueAxisRanges[axisName] = this.valueAxisRanges[axisName] || { min: MAX_VALUE, max: MIN_VALUE };\n            const { from, to } = value;\n\n            axisRange.min = Math.min(axisRange.min, from, to);\n            axisRange.max = Math.max(axisRange.max, from, to);\n        }\n    }\n\n    formatPointValue(point, format) {\n        const value = point.value;\n\n        return this.chartService.format.auto(format, value.from, value.to);\n    }\n\n    animationPoints() {\n        const points = this.points;\n        const result = [];\n        for (let idx = 0; idx < points.length; idx++) {\n            const point = points[idx];\n            if (point) {\n                result.push((point.fromPoint || {}).marker);\n                result.push((point.toPoint || {}).marker);\n            }\n        }\n\n        return result.concat(this._segments);\n    }\n}\n\ndeepExtend(RangeAreaChart.prototype, LineChartMixin, ClipAnimationMixin);\n\nexport default RangeAreaChart;\n"],"names":["super","const","let"],"mappings":"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"}