{"version":3,"file":"radial-scale.js","sources":["radial-scale.js"],"sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, defined, round } from '../../common';\nimport { BLACK, COORD_PRECISION } from '../../common/constants';\nimport { autoMajorUnit, Box, NumericAxis } from '../../core';\nimport { buildLabelElement, getRange } from '../utils';\n\nimport { DEGREE, DEFAULT_LINE_WIDTH, INSIDE, OUTSIDE } from '../constants';\n\nconst GEO_ARC_ADJUST_ANGLE = 180;\n\nconst { Arc, Path, Group } = drawing;\n\nfunction drawTicks(arc, tickAngles, unit, tickOptions) {\n    const ticks = new Group();\n    const center = arc.center;\n    const radius = arc.getRadiusX();\n\n    if (tickOptions.visible) {\n        for (let i = 0; i < tickAngles.length; i++) {\n            const tickStart = arc.pointAt(tickAngles[i]);\n            const tickEnd = new geo.Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n\n            ticks.append(new Path({\n                stroke: {\n                    color: tickOptions.color,\n                    width: tickOptions.width\n                }\n            }).moveTo(tickStart).lineTo(tickEnd));\n        }\n    }\n\n    return ticks;\n}\n\nfunction rangeSegment(from, to, color, opacity) {\n    return { from: from, to: to, color: color, opacity: opacity };\n}\n\nclass RadialScale extends NumericAxis {\n    constructor(options, service) {\n        super(0, 1, options, service);\n    }\n\n    initUserOptions(options) {\n        const scaleOptions = deepExtend({}, this.options, options);\n        scaleOptions.majorUnit = scaleOptions.majorUnit || autoMajorUnit(scaleOptions.min, scaleOptions.max);\n        scaleOptions.minorUnit = scaleOptions.minorUnit || scaleOptions.majorUnit / 10;\n\n        return scaleOptions;\n    }\n\n    initFields() {\n    }\n\n    render(center, radius) {\n        const arc = this.renderArc(center, radius);\n\n        this.bbox = arc.bbox();\n        this.labelElements = this.renderLabels();\n        this.ticks = this.renderTicks();\n        this.ranges = this.renderRanges();\n    }\n\n    reflow(bbox) {\n        const center = bbox.center();\n        const radius = Math.min(bbox.height(), bbox.width()) / 2;\n\n        if (defined(this.bbox)) {\n            this.bbox = this.arc.bbox();\n            this.radius(this.arc.getRadiusX());\n            this.repositionRanges();\n            this.renderLabels();\n        } else {\n            return this.render(center, radius);\n        }\n    }\n\n    slotAngle(value) {\n        const { min, max, reverse, startAngle, endAngle } = this.options;\n        const angle = endAngle - startAngle;\n        let result;\n\n        if (reverse) {\n            result = endAngle - (value - min) / (max - min) * angle;\n        } else {\n            result = ((value - min) / (max - min) * angle) + startAngle;\n        }\n\n        return result + GEO_ARC_ADJUST_ANGLE;\n    }\n\n    hasRanges() {\n        const ranges = this.options.ranges;\n\n        return ranges && ranges.length;\n    }\n\n    renderLabels() {\n        const options = this.options;\n        const majorTickSize = options.majorTicks.size;\n        const arc = this.arc.clone();\n        let radius = arc.getRadiusX();\n        const tickAngles = this.tickAngles(arc, options.majorUnit);\n        const rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n        const labelsGroup = new Group();\n\n        let rangeDistance = radius * 0.05;\n        if (defined(this.options.rangeDistance)) {\n            rangeDistance = this.options.rangeDistance;\n        } else {\n            this.options.rangeDistance = rangeDistance;\n        }\n\n        const labelsOptions = options.labels;\n        const isInside = labelsOptions.position === INSIDE;\n        const hasLabelElements = defined(this.labelElements);\n\n        if (isInside) {\n            radius -= majorTickSize;\n\n            if (this.hasRanges() && !hasLabelElements) {\n                radius -= rangeSize + rangeDistance;\n            }\n            arc.setRadiusX(radius).setRadiusY(radius);\n        }\n\n        const labels = this.labels;\n        const count = labels.length;\n        const padding = labelsOptions.padding;\n\n        for (let i = 0; i < count; i++) {\n            const label = labels[i];\n            const halfWidth = label.box.width() / 2;\n            const halfHeight = label.box.height() / 2;\n            const angle = tickAngles[i];\n            const labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n\n            const lp = arc.pointAt(angle);\n            const cx = lp.x + (Math.cos(labelAngle) * (halfWidth + padding) * (isInside ? 1 : -1));\n            const cy = lp.y + (Math.sin(labelAngle) * (halfHeight + padding) * (isInside ? 1 : -1));\n\n            label.reflow(new Box(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n            const labelPos = new geo.Point(label.box.x1, label.box.y1);\n\n            let labelElement;\n            if (!hasLabelElements) {\n                labelElement = buildLabelElement(label, options.labels);\n                labelsGroup.append(labelElement);\n            } else {\n                labelElement = this.labelElements.children[i];\n                const prevLabelPos = labelElement.bbox().origin;\n\n                const labelTransform = labelElement.transform() || geo.transform();\n                labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                labelElement.transform(labelTransform);\n            }\n\n            this.bbox = geo.Rect.union(this.bbox, labelElement.bbox());\n        }\n\n        return labelsGroup;\n    }\n\n    repositionRanges() {\n        const ranges = this.ranges.children;\n\n        if (ranges.length > 0) {\n            const { rangeDistance, rangeSize } = this.options;\n            let rangeRadius = this.getRangeRadius();\n\n            if (this.options.labels.position === INSIDE) {\n                rangeRadius += rangeSize + rangeDistance;\n            }\n\n            const newRadius = rangeRadius + (rangeSize / 2);\n\n            for (let i = 0; i < ranges.length; i++) {\n                ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n            }\n\n            this.bbox = geo.Rect.union(this.bbox, this.ranges.bbox());\n        }\n    }\n\n    renderRanges() {\n        const segments = this.rangeSegments();\n        const segmentsCount = segments.length;\n        const result = new Group();\n\n        if (segmentsCount) {\n            const { rangeSize, reverse, rangeDistance } = this.options;\n            const rangeRadius = this.getRangeRadius();\n\n            // move the ticks with a range distance and a range size\n            this.radius(this.radius() - rangeSize - rangeDistance);\n\n            for (let i = 0; i < segmentsCount; i++) {\n                const segment = segments[i];\n                const from = this.slotAngle(segment[reverse ? \"to\" : \"from\"]);\n                const to = this.slotAngle(segment[!reverse ? \"to\" : \"from\"]);\n\n                if (to - from !== 0) {\n                    result.append(this.createRange(from, to, rangeRadius, segment));\n                }\n            }\n        }\n\n        return result;\n    }\n\n    createRange(startAngle, endAngle, rangeRadius, options) {\n        const rangeSize = this.options.rangeSize;\n        const rangeGeom = new geo.Arc(this.arc.center, {\n            radiusX: rangeRadius + (rangeSize / 2),\n            radiusY: rangeRadius + (rangeSize / 2),\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n\n        return new Arc(rangeGeom, {\n            stroke: {\n                width: rangeSize,\n                color: options.color,\n                opacity: options.opacity,\n                lineCap: options.lineCap\n            }\n        });\n    }\n\n    rangeSegments() {\n        const options = this.options;\n        const ranges = options.ranges || [];\n        const count = ranges.length;\n        const segments = [];\n\n        if (count) {\n            const { min, max, rangePlaceholderColor: defaultColor } = options;\n            segments.push(rangeSegment(min, max, defaultColor));\n\n            for (let i = 0; i < count; i++) {\n                const range = getRange(ranges[i], min, max);\n                const segmentsCount = segments.length;\n\n                for (let j = 0; j < segmentsCount; j++) {\n                    const segment = segments[j];\n\n                    if (segment.from <= range.from && range.from <= segment.to) {\n                        segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n\n                        if (segment.from <= range.to && range.to <= segment.to) {\n                            segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                        }\n\n                        segment.to = range.from;\n\n                        break;\n                    }\n                }\n            }\n        }\n\n        return segments;\n    }\n\n    getRangeRadius() {\n        const { arc, options } = this;\n        const { rangeSize, rangeDistance, majorTicks: { size: majorTickSize } } = options;\n        let radius;\n\n        if (options.labels.position === OUTSIDE) {\n            radius = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n        } else {\n            radius = arc.getRadiusX() - rangeSize;\n        }\n\n        return radius;\n    }\n\n    renderArc(center, radius) {\n        const options = this.options;\n\n        const arc = this.arc = new geo.Arc(center, {\n            radiusX: radius,\n            radiusY: radius,\n            startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n            endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n        });\n\n        return arc;\n    }\n\n    renderTicks() {\n        const { arc, options } = this;\n        const tickArc = arc.clone();\n\n        this.majorTickAngles = this.tickAngles(arc, options.majorUnit);\n        this.majorTicks = drawTicks(tickArc, this.majorTickAngles, options.majorUnit, options.majorTicks);\n\n        const allTicks = new Group();\n        allTicks.append(this.majorTicks);\n\n        const majorTickSize = options.majorTicks.size;\n        const minorTickSize = options.minorTicks.size;\n\n        this._tickDifference = majorTickSize - minorTickSize;\n\n        if (options.labels.position === OUTSIDE) {\n            const radius = tickArc.getRadiusX();\n            tickArc.setRadiusX(radius - majorTickSize + minorTickSize)\n                   .setRadiusY(radius - majorTickSize + minorTickSize);\n        }\n\n        this.minorTickAngles = this.normalizeTickAngles(this.tickAngles(arc, options.minorUnit));\n        this.minorTicks = drawTicks(tickArc, this.minorTickAngles, options.minorUnit, options.minorTicks);\n        allTicks.append(this.minorTicks);\n\n        return allTicks;\n    }\n\n    normalizeTickAngles(angles) {\n        const options = this.options;\n        const skip = options.majorUnit / options.minorUnit;\n\n        for (let i = angles.length - 1; i >= 0; i--) {\n            if (i % skip === 0) {\n                angles.splice(i, 1);\n            }\n        }\n\n        return angles;\n    }\n\n    tickAngles(ring, stepValue) {\n        const options = this.options;\n        const reverse = options.reverse;\n        const range = options.max - options.min;\n        const angle = ring.endAngle - ring.startAngle;\n        const tickCount = range / stepValue;\n        let pos = ring.startAngle;\n        let step = angle / tickCount;\n\n        if (reverse) {\n            pos += angle;\n            step = -step;\n        }\n\n        const positions = [];\n        for (let i = 0; i < tickCount; i++) {\n            positions.push(round(pos, COORD_PRECISION));\n            pos += step;\n        }\n\n        if (round(pos) <= ring.endAngle) {\n            positions.push(pos);\n        }\n\n        return positions;\n    }\n\n    radius(radius) {\n        if (radius) {\n            this.arc.setRadiusX(radius).setRadiusY(radius);\n            this.repositionTicks(this.majorTicks.children, this.majorTickAngles);\n            this.repositionTicks(this.minorTicks.children, this.minorTickAngles, true);\n        } else {\n            return this.arc.getRadiusX();\n        }\n    }\n\n    repositionTicks(ticks, tickAngles, minor) {\n        const diff = minor ? (this._tickDifference || 0) : 0;\n        let tickArc = this.arc;\n        const radius = tickArc.getRadiusX();\n\n        if (minor && this.options.labels.position === OUTSIDE && diff !== 0) {\n            tickArc = this.arc.clone();\n            tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n        }\n\n        for (let i = 0; i < ticks.length; i++) {\n            const newPoint = tickArc.pointAt(tickAngles[i]);\n            const segments = ticks[i].segments;\n            const xDiff = newPoint.x - segments[0].anchor().x;\n            const yDiff = newPoint.y - segments[0].anchor().y;\n\n            ticks[i].transform(new geo.transform().translate(xDiff, yDiff));\n        }\n    }\n}\n\nsetDefaultOptions(RadialScale, {\n    min: 0,\n    max: 100,\n\n    majorTicks: {\n        size: 15,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    minorTicks: {\n        size: 10,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    startAngle: -30,\n    endAngle: 210,\n\n    labels: {\n        position: INSIDE,\n        padding: 2\n    }\n});\n\nexport default RadialScale;"],"names":["const","let","super","this"],"mappings":"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"}