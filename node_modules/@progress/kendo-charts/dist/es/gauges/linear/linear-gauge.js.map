{"version":3,"file":"linear-gauge.js","sources":["linear-gauge.js"],"sourcesContent":["import { drawing } from '@progress/kendo-drawing';\nimport { Box } from '../../core';\nimport { setDefaultOptions, deepExtend, isArray } from '../../common';\nimport { ARROW, DEFAULT_WIDTH, DEFAULT_HEIGHT } from '../constants';\nimport Gauge from '../gauge';\nimport LinearScale from './linear-scale';\nimport ArrowLinearPointer from './arrow-linear-pointer';\nimport BarLinearPointer from './bar-linear-pointer';\n\nconst DEFAULT_MIN_WIDTH = 60;\nconst DEFAULT_MIN_HEIGHT = 60;\n\nconst Group = drawing.Group;\n\nclass LinearGauge extends Gauge {\n\n    reflow(bbox) {\n        const pointers = this.pointers;\n        const bboxX = bbox.origin.x;\n        const bboxY = bbox.origin.y;\n\n        const box = new Box(bboxX, bboxY, bboxX + bbox.width(), bboxY + bbox.height());\n\n        this.scale.reflow(box);\n        this._shrinkScaleWidth(box);\n\n        for (let i = 0; i < pointers.length; i++) {\n            pointers[i].reflow();\n        }\n\n        this.bbox = this._getBox(box);\n        this._alignElements();\n        this._shrinkElements();\n        this._buildVisual();\n        this._draw();\n    }\n\n    _buildVisual() {\n        const visuals = new Group();\n        const scaleElements = this.scale.render();\n        const pointers = this.pointers;\n\n        visuals.append(this.gaugeArea);\n        visuals.append(scaleElements);\n\n        for (let i = 0; i < pointers.length; i++) {\n            const current = pointers[i];\n            visuals.append(current.render());\n            current.value(current.options.value);\n        }\n\n        this._visuals = visuals;\n    }\n\n    _createModel() {\n        const options = this.options;\n        const scale = this.scale = new LinearScale(options.scale, this.contextService);\n\n        this.pointers = [];\n\n        let pointers = options.pointer;\n        pointers = isArray(pointers) ? pointers : [ pointers ];\n\n        for (let i = 0; i < pointers.length; i++) {\n            const currentOptions = deepExtend({}, pointers[i], {\n                animation: {\n                    transitions: options.transitions\n                }\n            });\n            const pointerType = currentOptions.shape === ARROW ? ArrowLinearPointer : BarLinearPointer;\n\n            this.pointers.push(new pointerType(scale, currentOptions));\n        }\n    }\n\n    _defaultSize() {\n        const vertical = this.options.scale.vertical;\n\n        return {\n            width: vertical ? DEFAULT_MIN_WIDTH : DEFAULT_WIDTH,\n            height: vertical ? DEFAULT_HEIGHT : DEFAULT_MIN_HEIGHT\n        };\n    }\n\n    _getBox(box) {\n        const { scale, pointers } = this;\n        const boxCenter = box.center();\n        let plotAreaBox = pointers[0].box.clone().wrap(scale.box);\n\n        for (let i = 0; i < pointers.length; i++) {\n            plotAreaBox.wrap(pointers[i].box.clone());\n        }\n\n        let size;\n        if (scale.options.vertical) {\n            size = plotAreaBox.width() / 2;\n            plotAreaBox = new Box(\n                boxCenter.x - size, box.y1,\n                boxCenter.x + size, box.y2\n            );\n        } else {\n            size = plotAreaBox.height() / 2;\n            plotAreaBox = new Box(\n                box.x1, boxCenter.y - size,\n                box.x2, boxCenter.y + size\n            );\n        }\n\n        return plotAreaBox;\n    }\n\n    _alignElements() {\n        const { scale, pointers } = this;\n        const scaleBox = scale.box;\n        const box = pointers[0].box.clone().wrap(scale.box);\n        const plotAreaBox = this.bbox;\n\n        for (let i = 0; i < pointers.length; i++) {\n            box.wrap(pointers[i].box.clone());\n        }\n\n        let diff;\n        if (scale.options.vertical) {\n            diff = plotAreaBox.center().x - box.center().x;\n            scale.reflow(new Box(\n                scaleBox.x1 + diff, plotAreaBox.y1,\n                scaleBox.x2 + diff, plotAreaBox.y2\n            ));\n        } else {\n            diff = plotAreaBox.center().y - box.center().y;\n            scale.reflow(new Box(\n                scaleBox.x1, scaleBox.y1 + diff,\n                scaleBox.x2, scaleBox.y2 + diff\n            ));\n        }\n\n        for (let i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(this.bbox);\n        }\n    }\n\n    _shrinkScaleWidth(bbox) {\n        const { scale } = this;\n        if (!scale.options.vertical) {\n            const overflow = scale.contentBox().width() - bbox.width();\n            if (overflow > 0) {\n                scale.box.shrink(overflow, 0);\n                scale.box.alignTo(bbox, 'center');\n                scale.reflow(scale.box);\n            }\n        }\n    }\n\n    _shrinkElements() {\n        const { scale, pointers } = this;\n        const scaleBox = scale.box.clone();\n        const pos = scale.options.vertical ? \"y\" : \"x\";\n        const pointerBox = pointers[0].box;\n\n        for (let i = 0; i < pointers.length; i++) {\n            pointerBox.wrap(pointers[i].box.clone());\n        }\n\n        scaleBox[pos + 1] += Math.max(scaleBox[pos + 1] - pointerBox[pos + 1], 0);\n        scaleBox[pos + 2] -= Math.max(pointerBox[pos + 2] - scaleBox[pos + 2], 0);\n\n        scale.reflow(scaleBox);\n\n        for (let i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(this.bbox);\n        }\n    }\n}\n\nsetDefaultOptions(LinearGauge, {\n    transitions: true,\n    gaugeArea: {\n        background: \"\"\n    },\n    scale: {\n        vertical: true\n    }\n});\n\nexport default LinearGauge;"],"names":["const","let","this","i"],"mappings":"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"}