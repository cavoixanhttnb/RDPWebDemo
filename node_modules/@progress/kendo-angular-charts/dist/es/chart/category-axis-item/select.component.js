import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ConfigurationService } from '../../common/configuration.service';
import { CategoryAxisSelectComponentGenerated } from '../category-axis-item/select.component.generated';
/**
 * The selected axis range. If set, the axis selection is enabled. The range is index-based and starts from 0.
 * Categories with indexes in the range ([`select.from`]({% slug api_charts_categoryaxisselectcomponent %}#toc-from) and
 * [`select.to`]({% slug api_charts_categoryaxisselectcomponent %}#toc-to)) will be selected.
 * That is, the last category in the range will not be included in the selection.
 * If the categories are dates, the range also has to be specified with date values.
 */
var CategoryAxisSelectComponent = (function (_super) {
    tslib_1.__extends(CategoryAxisSelectComponent, _super);
    // Place custom properties here
    function CategoryAxisSelectComponent(configurationService) {
        var _this = _super.call(this, configurationService) || this;
        _this.configurationService = configurationService;
        return _this;
    }
    return CategoryAxisSelectComponent;
}(CategoryAxisSelectComponentGenerated));
export { CategoryAxisSelectComponent };
CategoryAxisSelectComponent.decorators = [
    { type: Component, args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'kendo-chart-category-axis-item-select',
                template: ''
            },] },
];
/** @nocollapse */
CategoryAxisSelectComponent.ctorParameters = function () { return [
    { type: ConfigurationService, },
]; };
